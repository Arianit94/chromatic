
uniform float uTime;

varying vec3 vColor;

const float PI = 3.14159;
const float TWICE_PI = PI * 2.0;

void main() {

	vec3 ringData = position.xyz;

	float iRing = ringData.x; // ring index, normalized
	float iLocal = ringData.y; // local index within ring, 
	float iGlobal = ringData.z;

	float angle = iGlobal * 30.0 * TWICE_PI;// + sin(iLocal + uTime*0.0002);
	float radius = 1.0;// + cos(iGlobal * mix(5000.0,5000.0, sin(uTime*0.00001+1.0)*0.5+0.5) + uTime*0.002) + iGlobal;

	float x = cos(angle) * radius;
	float y = sin(angle) * radius;
	float z = -10.0 + sin(1.0 + uTime*0.0005 + iGlobal * 6.0) * 10.0;

	vec3 pos = vec3(x,y,z);

	//vColor = vec3(sin(uTime*0.001 + iGlobal*3.0), cos(iGlobal*10.0 + uTime*0.0015), 1.0);
	vColor = vec3(1.0);
	
    //vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );
}